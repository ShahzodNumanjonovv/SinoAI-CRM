// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/api/doctors/[id]/edit" | "/calendar" | "/doctors" | "/doctors/[id]/edit" | "/doctors/new" | "/kassir" | "/kassir/[id]" | "/kassir/create" | "/login" | "/patients" | "/patients/new" | "/profile" | "/services" | "/services/new" | "/settings/clinic" | "/settings/departments" | "/settings/discounts" | "/statistics" | "/users" | "/users/[id]/edit" | "/users/new"
type AppRouteHandlerRoutes = "/api/appointments" | "/api/appointments/[id]" | "/api/appointments/day" | "/api/auth/change-password" | "/api/auth/login" | "/api/calendar" | "/api/departments" | "/api/discounts" | "/api/doctors" | "/api/doctors/[id]" | "/api/doctors/[id]/availability" | "/api/invoices" | "/api/invoices/[id]" | "/api/miniapp/book" | "/api/miniapp/doctors" | "/api/patients" | "/api/services" | "/api/statistics" | "/api/stats" | "/api/users" | "/api/users/[id]" | "/kassir/[id]/cancel" | "/kassir/[id]/pay"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/appointments": {}
  "/api/appointments/[id]": { "id": string; }
  "/api/appointments/day": {}
  "/api/auth/change-password": {}
  "/api/auth/login": {}
  "/api/calendar": {}
  "/api/departments": {}
  "/api/discounts": {}
  "/api/doctors": {}
  "/api/doctors/[id]": { "id": string; }
  "/api/doctors/[id]/availability": { "id": string; }
  "/api/doctors/[id]/edit": { "id": string; }
  "/api/invoices": {}
  "/api/invoices/[id]": { "id": string; }
  "/api/miniapp/book": {}
  "/api/miniapp/doctors": {}
  "/api/patients": {}
  "/api/services": {}
  "/api/statistics": {}
  "/api/stats": {}
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/calendar": {}
  "/doctors": {}
  "/doctors/[id]/edit": { "id": string; }
  "/doctors/new": {}
  "/kassir": {}
  "/kassir/[id]": { "id": string; }
  "/kassir/[id]/cancel": { "id": string; }
  "/kassir/[id]/pay": { "id": string; }
  "/kassir/create": {}
  "/login": {}
  "/patients": {}
  "/patients/new": {}
  "/profile": {}
  "/services": {}
  "/services/new": {}
  "/settings/clinic": {}
  "/settings/departments": {}
  "/settings/discounts": {}
  "/statistics": {}
  "/users": {}
  "/users/[id]/edit": { "id": string; }
  "/users/new": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
