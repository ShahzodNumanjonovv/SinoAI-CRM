// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/(dashboard)/calendar/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/calendar/page.js")
  handler satisfies AppPageConfig<"/calendar">
}

// Validate ../../app/(dashboard)/kassir/[id]/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/kassir/[id]/page.js")
  handler satisfies AppPageConfig<"/kassir/[id]">
}

// Validate ../../app/(dashboard)/kassir/create/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/kassir/create/page.js")
  handler satisfies AppPageConfig<"/kassir/create">
}

// Validate ../../app/(dashboard)/kassir/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/kassir/page.js")
  handler satisfies AppPageConfig<"/kassir">
}

// Validate ../../app/(dashboard)/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/(dashboard)/patients/new/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/patients/new/page.js")
  handler satisfies AppPageConfig<"/patients/new">
}

// Validate ../../app/(dashboard)/patients/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/patients/page.js")
  handler satisfies AppPageConfig<"/patients">
}

// Validate ../../app/(dashboard)/profile/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/profile/page.js")
  handler satisfies AppPageConfig<"/profile">
}

// Validate ../../app/(dashboard)/services/new/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/services/new/page.js")
  handler satisfies AppPageConfig<"/services/new">
}

// Validate ../../app/(dashboard)/services/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/services/page.js")
  handler satisfies AppPageConfig<"/services">
}

// Validate ../../app/(dashboard)/settings/clinic/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/settings/clinic/page.js")
  handler satisfies AppPageConfig<"/settings/clinic">
}

// Validate ../../app/(dashboard)/settings/departments/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/settings/departments/page.js")
  handler satisfies AppPageConfig<"/settings/departments">
}

// Validate ../../app/(dashboard)/settings/discounts/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/settings/discounts/page.js")
  handler satisfies AppPageConfig<"/settings/discounts">
}

// Validate ../../app/(dashboard)/statistics/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/statistics/page.js")
  handler satisfies AppPageConfig<"/statistics">
}

// Validate ../../app/(dashboard)/users/[id]/edit/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/users/[id]/edit/page.js")
  handler satisfies AppPageConfig<"/users/[id]/edit">
}

// Validate ../../app/(dashboard)/users/new/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/users/new/page.js")
  handler satisfies AppPageConfig<"/users/new">
}

// Validate ../../app/(dashboard)/users/page.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/users/page.js")
  handler satisfies AppPageConfig<"/users">
}

// Validate ../../app/login/page.tsx
{
  const handler = {} as typeof import("../../app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/(dashboard)/kassir/[id]/cancel/route.ts
{
  const handler = {} as typeof import("../../app/(dashboard)/kassir/[id]/cancel/route.js")
  handler satisfies RouteHandlerConfig<"/kassir/[id]/cancel">
}

// Validate ../../app/(dashboard)/kassir/[id]/pay/route.ts
{
  const handler = {} as typeof import("../../app/(dashboard)/kassir/[id]/pay/route.js")
  handler satisfies RouteHandlerConfig<"/kassir/[id]/pay">
}

// Validate ../../app/api/auth/change-password/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/change-password/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/change-password">
}

// Validate ../../app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../app/api/departments/route.ts
{
  const handler = {} as typeof import("../../app/api/departments/route.js")
  handler satisfies RouteHandlerConfig<"/api/departments">
}

// Validate ../../app/api/discounts/route.ts
{
  const handler = {} as typeof import("../../app/api/discounts/route.js")
  handler satisfies RouteHandlerConfig<"/api/discounts">
}

// Validate ../../app/api/invoices/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/invoices/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/invoices/[id]">
}

// Validate ../../app/api/invoices/route.ts
{
  const handler = {} as typeof import("../../app/api/invoices/route.js")
  handler satisfies RouteHandlerConfig<"/api/invoices">
}

// Validate ../../app/api/patients/route.ts
{
  const handler = {} as typeof import("../../app/api/patients/route.js")
  handler satisfies RouteHandlerConfig<"/api/patients">
}

// Validate ../../app/api/services/route.ts
{
  const handler = {} as typeof import("../../app/api/services/route.js")
  handler satisfies RouteHandlerConfig<"/api/services">
}

// Validate ../../app/api/statistics/route.ts
{
  const handler = {} as typeof import("../../app/api/statistics/route.js")
  handler satisfies RouteHandlerConfig<"/api/statistics">
}

// Validate ../../app/api/stats/route.ts
{
  const handler = {} as typeof import("../../app/api/stats/route.js")
  handler satisfies RouteHandlerConfig<"/api/stats">
}

// Validate ../../app/api/users/[id]/route.ts
{
  const handler = {} as typeof import("../../app/api/users/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/users/[id]">
}

// Validate ../../app/api/users/route.ts
{
  const handler = {} as typeof import("../../app/api/users/route.js")
  handler satisfies RouteHandlerConfig<"/api/users">
}





// Validate ../../app/(dashboard)/layout.tsx
{
  const handler = {} as typeof import("../../app/(dashboard)/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
